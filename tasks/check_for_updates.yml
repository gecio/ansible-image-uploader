- name: "Loading settings for {{ image_name }}"
  ansible.builtin.include_vars:
    name: image_data
    file: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - 'images/{{ image_name }}.yml'
      paths:
        - 'vars'
        - '../vars'


- name: Fetch checksum
  ansible.builtin.uri:
    url: "{{ image_data.checksum }}"
    return_content: true
  when: "'checksum' in image_data"
  register: source_checksum

- name: Parse checksum
  ansible.utils.cli_parse:
    text: >
      {{ source_checksum['content'] if 'content' in source_checksum else
        ([image_data.checksum_raw, image_data.url | basename] | join(' *'))
      }}
    parser:
      name: ansible.netcommon.native
      template_path: "{{ role_path }}/templates/source_checksum.yml"
  register: parsed_checksum

- name: Check if version already exists in glance
  openstack.cloud.image_info:
    properties:
      uploaded_by: Image Uploader
      source_hash: "{{ parsed_checksum.parsed[image_data.url | basename] }}"
  register: result
  changed_when: result.openstack_images | count == 0

- name: Current version not in glance -> Proceeding
  ansible.builtin.include_tasks: # noqa no-handler
    file: download_image.yml
  when: result is changed
  vars:
    distribution: "{{ image_data.distribution }}"
    release: "{{ image_data.release }}"
    url: "{{ image_data.url }}"
    checksum: "{{ parsed_checksum.parsed[image_data.url | basename] }}"
    algorithm: "{{ image_data.algorithm }}"
    version: "{{ image_data.version | default(omit) }}"
    ssh_user: "{{ image_data.ssh_user | default(image_data.distribution) }}"
    testing_enabled: "{{ image_data.testing_enabled | default(true) }}"
    config_drive: "{{ image_data.config_drive | default(false) }}"
    display_name: >-
      {{
        image_data.display_name | default(
        [
          image_data.distribution | capitalize,
          image_data.version | default(Undefined),
          image_data.release | title
        ] | select("defined") | join(' ') )
      }}
    source_filename: "{{ image_data.url | basename }}"
